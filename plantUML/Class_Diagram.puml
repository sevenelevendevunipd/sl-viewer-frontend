@startuml

top to bottom direction
skinparam linetype polyline

class node29 as "components/LogUploader.tsx" {
   Card:
   FileUpload:
   FileUploadHandlerEvent:
   LogParserResponse_4dfe1dd_LogFile:
   LogParsingError:
   ProgressSpinner:
   Toast:
   useLogParsingService:
   useRef:
   useState:
}
class node6 as "components/LogViewer.tsx" {
   CodeFilterUi:
   CodeFilteringStrategy:
   FilterUi:
   LogData:
   LogInfo:
   LogParserResponse_4dfe1dd_LogFile:
   SubunitFilterUi:
   SubunitFilteringStrategy:
   useEffect:
   useLogFilteringService:
   useState:
}
class node19 as "components/ThemeSwitcher.tsx" {
   InputSwitch:
   ThemeContext:
   ThemeProvider:
   ThemeSwitcher:
   createContext:
   echarts:
   echartsDarkTheme:
   echartsLightTheme:
   useContext:
   useEffect:
   useState:
}
class node36 as "filter/CodeFilterUi.tsx" {
   Button:
   Card:
   CodeFilterUi:
   CodeFilteringStrategy:
   ListBox:
   observer:
}
class node23 as "filter/SubunitFilterUi.tsx" {
   Button:
   Card:
   SubunitFilterUi:
   SubunitFilteringStrategy:
   Tree:
   TreeCheckboxSelectionKeys:
   TreeExpandedKeysType:
   observer:
   useEffect:
   useState:
}
class node15 as "filters/CodeFilter.tsx" {
   CodeFilteringStrategy:
   LogFilteringStrategy:
   LogParserResponse_4dfe1dd_LogEntry:
   LogParserResponse_4dfe1dd_LogFile:
   action:
   computed:
   makeObservable:
   observable:
}
class node40 as "filters/SubunitFilter.tsx" {
   LogFilteringStrategy:
   LogParserResponse_4dfe1dd_LogEntry:
   LogParserResponse_4dfe1dd_LogFile:
   SubunitFilteringStrategy:
   TreeCheckboxSelectionKeys:
   TreeNode:
   action:
   computed:
   makeObservable:
   observable:
}
class node54 as "services/DefaultService.ts" {
   CancelablePromise:
   DefaultService:
   LogParserResponse_4dfe1dd:
   LogUpload_f5eab8c:
   OpenAPI:
   __request:
}
class node18 as "services/LogFilteringService.tsx" {
   FilterUi:
   ILogFilteringService:
   LogFilteringStrategy:
   LogParserResponse_4dfe1dd_LogEntry:
   LogParserResponse_4dfe1dd_LogFile:
   PropsWithChildren:
   action:
   computed:
   createContext:
   makeObservable:
   observable:
   observer:
   useContext:
   useLogFilteringService:
}
class node7 as "services/LogParsingService.tsx" {
   ApiError:
   DefaultService:
   LogParserError_581e5e4:
   LogParserResponse_4dfe1dd:
   LogParsingError:
   PropsWithChildren:
   createContext:
   useContext:
   useLogParsingService:
}
class node21 as "src/App.tsx" {
   Button:
   LogFilteringService:
   LogParserResponse_4dfe1dd_LogFile:
   LogParsingService:
   LogUploader:
   LogViewer:
   Logo:
   ThemeProvider:
   ThemeSwitcher:
   primeflex.css:
   primeicons.css:
   primereact.css:
   theme.scss:
   useState:
}
class node59 as "src/index.tsx" {
   App:
   OpenAPI:
   React:
   ReactDOM:
   configure:
}
class node63 as "viewer/LogData.tsx" {
   Card:
   ILogFilteringService:
   LogData:
   LogTable:
   Timeline:
   observer:
   useLogFilteringService:
}
class node37 as "viewer/LogInfo.tsx" {
   Card:
   LogParserResponse_4dfe1dd_LogFile:
}
class node57 as "viewer/LogTable.tsx" {
   Column:
   DataTable:
   ILogFilteringService:
   LogTable:
   observer:
   useLogFilteringService:
}
class node16 as "viewer/Timeline.tsx" {
   CustomSeriesOption:
   CustomSeriesRenderItem:
   CustomSeriesRenderItemParams:
   LogParserResponse_4dfe1dd_LogEntry:
   ReactECharts:
   ThemeContext:
   Timeline:
   echarts:
   useContext:
   useMemo:
}

node29  <-[#595959,plain]-  node7
node29  <-[#595959,plain]-  node7
node6   <-[#595959,plain]-  node36
node6   <-[#595959,plain]-  node23
node6   <-[#595959,plain]-  node15
node6   <-[#595959,plain]-  node40
node6   <-[#595959,plain]-  node18
node6   <-[#595959,plain]-  node18
node6   <-[#595959,plain]-  node63
node6   <-[#595959,plain]-  node37
node36  <-[#595959,plain]-  node15
node23  <-[#595959,plain]-  node40
node15  <-[#595959,plain]-  node18
node40  <-[#595959,plain]-  node18
node7   <-[#595959,plain]-  node54
node21  <-[#595959,plain]-  node29
node21  <-[#595959,plain]-  node6
node21  <-[#595959,plain]-  node19
node21  <-[#595959,plain]-  node19
node21  <-[#595959,plain]-  node18
node21  <-[#595959,plain]-  node7
node59  <-[#595959,plain]-  node21
node63  <-[#595959,plain]-  node18
node63  <-[#595959,plain]-  node18
node63  <-[#595959,plain]-  node57
node63  <-[#595959,plain]-  node16
node57  <-[#595959,plain]-  node18
node57  <-[#595959,plain]-  node18
node16  <-[#595959,plain]-  node19
@enduml

